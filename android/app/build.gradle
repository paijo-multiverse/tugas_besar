plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.tugas_besar"
    
    // Ubah compileSdk menjadi 34 sesuai dengan yang disarankan
    compileSdk = 34 // Sesuaikan dengan versi compile SDK yang Anda gunakan

    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // Application ID unik Anda
        applicationId = "com.example.tugas_besar"
        
        // Ubah minSdkVersion menjadi 23 sesuai dengan yang disarankan
        minSdkVersion 23 // Ubah ke 23
        
        // Ubah targetSdkVersion menjadi 34 sesuai dengan yang disarankan
        targetSdkVersion 34 // Sesuaikan dengan versi target SDK yang Anda gunakan
        
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Tambahkan konfigurasi signing Anda sendiri untuk build release.
            // Signing dengan kunci debug untuk sekarang, agar `flutter run --release` bisa berjalan.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
